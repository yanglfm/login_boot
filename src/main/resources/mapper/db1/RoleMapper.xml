<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tom.login_boot.mapper.db1.RoleMapper">


    <resultMap id="childModuleMap" type="com.tom.login_boot.model.Module">
        <id property="id" column="ID"/>
        <result property="name" column="name"/>
        <result property="path" column="path"/>
        <result property="parentId" column="parent_id"/>
        <result property="component" column="component"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <select id="getUserModule" resultType="com.tom.login_boot.model.Module">
         select *
        from module m
        where m.id not in (select rm.module_id
                   from role_module rm
                   where rm.role_id in (#{roleIds}))
    </select>
    <select id="getAllParentModule" resultType="com.tom.login_boot.model.Module">
select *
from module m where m.parent_id is null
    </select>
    <select id="getAllChildModule" resultMap="childModuleMap">
select * from module m where m.parent_id in (${parentIds})
    </select>

    <select id="getParentModuleByRole" resultType="com.tom.login_boot.model.Module">
select *
from module m
where m.id in (select rm.module_id
               from role_module rm
               where rm.role_id in (${roleIds}))
  and m.parent_id is null
    </select>
    <select id="getChildModuleByRole" resultMap="com.tom.login_boot.mapper.db1.UserMapper.secondModuleMap">
select *
from module m
where m.id in (select rm.module_id
               from role_module rm
               where rm.role_id in (${roleIds}))
  and m.parent_id in(${parentIds})
    </select>

</mapper>